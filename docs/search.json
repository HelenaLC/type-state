[
  {
    "objectID": "CyTOF_1.html",
    "href": "CyTOF_1.html",
    "title": "DAS",
    "section": "",
    "text": "Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(diffcyt)\nlibrary(scuttle)\nlibrary(ggrepel)\nlibrary(ggplot2)\nlibrary(tidytext)\nlibrary(CATALYST)\nlibrary(patchwork)\nlibrary(reshape2)\nlibrary(edgeR)\n\n\n\n\n\n\n\n\n\n\nCode\n# download panel & metadata tables\n.rd <- tempfile(rd <- \"PBMC8_panel_v3.xlsx\")\n.md <- tempfile(md <- \"PBMC8_metadata.xlsx\")                     \nurl <- \"http://imlspenticton.uzh.ch/robinson_lab/cytofWorkflow\"\ndownload.file(file.path(url, rd), destfile = .rd, mode = \"wb\", quiet = TRUE)\ndownload.file(file.path(url, md), destfile = .md, mode = \"wb\", quiet = TRUE)\n# load tables & measurement data\nrd <- readxl::read_excel(.rd)                  \nmd <- readxl::read_excel(.md) \nfs <- HDCytoData::Bodenmiller_BCR_XL_flowSet() \n# fix sample & group ordering\nmd$condition <- factor(md$condition, c(\"Ref\", \"BCRXL\"))        \nmd$sample_id <- factor(md$sample_id, md$sample_id[order(md$condition)])    \n# construct 'SingleCellExperiment'\n(sce <- prepData(fs, rd, md, features = rd$fcs_colname))\n\n\nclass: SingleCellExperiment \ndim: 24 172791 \nmetadata(1): experiment_info\nassays(2): counts exprs\nrownames(24): CD3 CD45 ... HLA-DR CD7\nrowData names(3): channel_name marker_name marker_class\ncolnames: NULL\ncolData names(3): sample_id condition patient_id\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\n\n\nCode\nset.seed(seed <- 7043)\nsce <- runDR(sce, features = rownames(sce), cells = 500)\n\n\n\n\n\n\n\n\nCode\ndims <- list(5,6,7,8,9,10)\n#.all_score(x=sce, dim  = 3)\n\nres_by_resolution <- lapply(dims, .all_score, x = sce)\nnames(res_by_resolution) <- dims\nres_df <-  melt(res_by_resolution, id.vars = c(\"marker_id\", \"marker_class\"))\nggplot(data = res_df, aes(x = factor(L1, levels = c(5,6,7,8,9,10)), y = value, shape = variable, color = marker_class)) + geom_point()+ facet_wrap(~marker_id) + xlab(\"Clustering resolution\") + ylab(\"Score\")\n\n\n\n\n\n\n\n\n\nsom25som36som49som64som81som100\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 5, ydim = 5,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 6, ydim = 6,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 7, ydim = 7,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 8, ydim = 8,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 9, ydim = 9,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\nCode\nsce <- cluster(sce, \n  xdim = 10, ydim = 10,\n  features = rownames(sce), \n  seed = seed, verbose = FALSE)\nplotExprHeatmap(sce, features = NULL, \n    by = \"cluster_id\", k = names(cluster_codes(sce))[1], \n    bars = TRUE, perc = TRUE, fun = \"median\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nexprss <- assay(sce, \"exprs\")\n#colnames(exprss) <- cluster_ids(sce)\nexprss[exprss < 0] <- 0\nei <- .ei(sce)\ndm <- createDesignMatrix(ei)\ncm <- createContrast(c(0, 1))\ndge <- DGEList(counts = exprss, group = colData(sce)$condition)\ndge <- calcNormFactors(dge)\ndge <- estimateDisp(dge)\n\n\nUsing classic mode.\n\n\nCode\nfit <- glmQLFit(dge)\nqlf <- glmQLFTest(fit, coef = 2)\nqlf$table$marker_class <- marker_classes(sce)\nggplot(qlf$table, aes(x=reorder(rownames(qlf$table), F), y = F, color = marker_class)) + geom_point() + xlab(\"Markers\") + ylab(\"F\") + theme(axis.text.x = element_text(angle=45, hjust=1))\n\n\n\n\n\n\n\nCode\nres <- .all_score(sce, dim = 10)\nres$F_stat <- qlf$table$F\nggplot(res, aes(x = type_score, y = F_stat, label = marker_id, color = marker_class)) + geom_point() +geom_text(hjust=0, vjust=0, size = 3)\n\n\n\n\n\n\n\n\n\nfeature selected by state scorefeature selected by type score\n\n\n\n\nCode\nset.seed(seed <- 7043)\n#(sel <- with(res, marker_id[score > median(score)]))\n#res <- .all_score(sce, dim = 10)\nsel <- res$marker_id[res$state_score < 0.15]\nsce2 <- runDR(sce, features = sel, cells = 500)\nsce2 <- cluster(sce, \n  xdim = 10, ydim = 10, features = sel, \n  seed = seed, verbose = FALSE)\nplotDR(sce, color_by = \"condition\") + ggtitle(\"all features\") +\nplotDR(sce, color_by = \"meta20\") + \nplotDR(sce2, color_by = \"condition\") + ggtitle(\"selected only\") +\nplotDR(sce2, color_by = \"meta20\") +\nplot_layout(nrow = 2, guides = \"collect\") & \n  theme_void() & theme(legend.key.size = unit(0.5, \"lines\"))\n\n\n\n\n\n\n\n\n\nCode\nset.seed(seed <- 7043)\n#(sel <- with(res, marker_id[score > median(score)]))\n#res <- .all_score(sce, dim = 10)\nsel <- res$marker_id[res$type_score > 0.1]\nsce3 <- runDR(sce, features = sel, cells = 500)\nsce3 <- cluster(sce, \n  xdim = 10, ydim = 10, features = sel, \n  seed = seed, verbose = FALSE)\nplotDR(sce, color_by = \"condition\") + ggtitle(\"all features\") +\nplotDR(sce, color_by = \"meta20\") + \nplotDR(sce3, color_by = \"condition\") + ggtitle(\"selected only\") +\nplotDR(sce3, color_by = \"meta20\") +\nplot_layout(nrow = 2, guides = \"collect\") & \n  theme_void() & theme(legend.key.size = unit(0.5, \"lines\"))"
  }
]