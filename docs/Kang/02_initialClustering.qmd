---
title: "Case study on Kang18 scRNA-seq dataset - Initial Clustering"
format:
  html:
    toc: true
    code-fold: true
    code-tools: true
    toc_float: true
---

## Dependencies
```{r package, warning=FALSE, message=FALSE}
suppressPackageStartupMessages({
    library(scater)
    library(scran)
    library(igraph)
    library(harmony)
})
```

## Load data
Load filtered data (after QC and normalization).
```{r data, fig.height=5, fig.width=10}
sce <- readRDS("../../data/Kang/sce.rds")
plotTSNE(sce, colour_by = "cluster_id") +
    coord_equal() +
plotTSNE(sce, colour_by = "group_id")  + 
    coord_equal()

```

## HVG

We selected highly variable genes (HVG) and use them for dimension reduction (DR). The DR result is shown in PCA colored by the annotated cell types, sample ids and conditions (control or stimulated). 

First, we need to identify significant PCs in order to capture the majority of the variation between clusters or cell types. An elbow plot is drawn to show the percentage of explained variance by each PC using the top 50 PCs. 

```{r HVG}
# widely used feature selection: HVG
tbl <- modelGeneVar(sce, block = sce$sample_id)
rowData(sce)$hvg <- hvg <- tbl$bio > 0
rowData(sce)$bio <- tbl$bio 
sce <- runPCA(sce, subset_row = hvg, ncomponent = 50)
pcs <- attr(reducedDim(sce, "PCA"), "percentVar")
pv <- data.frame(row.names = NULL,
  PC = seq_len(length(pcs)),
  percentVar = pcs)

ggplot(pv, aes(x = PC, y = percentVar, label = PC)) + 
  geom_text(size = 3, color = "blue")
```

With the elbow plot, we can roughly see the explained variance does not change from PC10. Therefore, we decided to use 10 PCs that explain the majority of the variance of the high-dimension data. 

```{r dr, message=FALSE, warning=FALSE, fig.height=5, fig.width=10}
sce <- runPCA(sce, subset_row = hvg, ncomponents = 10)
sce <- runTSNE(sce)
plotTSNE(sce, colour_by = "cluster_id") +
    coord_equal() +
plotTSNE(sce, colour_by = "group_id")  + 
    coord_equal()
```

## Initial clustering: high and low resolution
```{r clustering}
#| label: Initial clustering
set.seed(2023)
g <- buildSNNGraph(sce, use.dimred = "PCA")
sce$cluster_hi <- cluster_louvain(g, resolution = 5)$membership
sce$cluster_lo <- cluster_louvain(g, resolution = 0.3)$membership
sce$cluster_hi <- factor(sce$cluster_hi, sort(unique(sce$cluster_hi)))
sce$cluster_lo <- factor(sce$cluster_lo, sort(unique(sce$cluster_lo)))
```


```{r clustering visual, message=FALSE, warning=FALSE, fig.height=5, fig.width=10}
plotTSNE(sce, colour_by = "cluster_hi") + coord_equal() +
plotTSNE(sce, colour_by = "cluster_lo") + coord_equal()
```

```{r}
saveRDS(sce, "../../data/Kang/cluster_sce.rds")
```

## Harmony integration
```{r harmony}
sce <- RunHarmony(sce,
  group.by.vars = "sample_id",
  reduction.use = "PCA",
  verbose = FALSE)
sce <- runTSNE(sce, dimred = "HARMONY")
```

```{r cluster with harmony}
set.seed(2023)
g <- buildSNNGraph(sce, use.dimred = "HARMONY")
sce$cluster_hi <- cluster_louvain(g, resolution = 5)$membership
sce$cluster_lo <- cluster_louvain(g, resolution = 0.3)$membership
# sce$cluster_hi <- leiden(g, resolution_parameter = 5)
# sce$cluster_lo <- leiden(g, resolution_parameter = 0.3)
sce$cluster_hi <- factor(sce$cluster_hi, sort(unique(sce$cluster_hi)))
sce$cluster_lo <- factor(sce$cluster_lo, sort(unique(sce$cluster_lo)))
```

::: {.panel-tabset}

## PCA
```{r hdr,  fig.height=5, fig.width=10}
plotReducedDim(sce, colour_by = "cluster_id", dimred = "HARMONY") + coord_equal() +
plotReducedDim(sce, colour_by = "group_id", dimred = "HARMONY") + coord_equal()
```

## TSNE - cell type and condition
```{r, fig.height=5, fig.width=10}
plotTSNE(sce, colour_by = "cluster_id") + coord_equal() +
plotTSNE(sce, colour_by = "group_id") + coord_equal()
```

## TSNE - clusters
```{r tsne, fig.height=5, fig.width=10}
plotTSNE(sce, colour_by = "cluster_hi") + coord_equal() +
plotTSNE(sce, colour_by = "cluster_lo") + coord_equal()
```
::: 

```{r}
saveRDS(sce, "../../data/Kang/clu_sce.rds")
```

